# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import minimax.models
import minimax.utils.model_utils
import mptt.fields
import django.utils.timezone
import django.core.validators
import s3direct.fields


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('title', models.CharField(max_length=200, null=True, blank=True)),
                ('title_en', models.CharField(max_length=200, null=True, blank=True)),
                ('title_de', models.CharField(max_length=200, null=True, blank=True)),
                ('image', s3direct.fields.S3DirectField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CertificationType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('title', models.CharField(max_length=200, null=True, blank=True)),
                ('title_en', models.CharField(max_length=200, null=True, blank=True)),
                ('title_de', models.CharField(max_length=200, null=True, blank=True)),
                ('image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('description', models.TextField(null=True, verbose_name='description', blank=True)),
                ('description_en', models.TextField(null=True, verbose_name='description', blank=True)),
                ('description_de', models.TextField(null=True, verbose_name='description', blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=200)),
                ('logo', s3direct.fields.S3DirectField(null=True, blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('title', models.CharField(max_length=200, null=True, blank=True)),
                ('title_en', models.CharField(max_length=200, null=True, blank=True)),
                ('title_de', models.CharField(max_length=200, null=True, blank=True)),
                ('file', s3direct.fields.S3DirectField()),
                ('file_en', s3direct.fields.S3DirectField(null=True)),
                ('file_de', s3direct.fields.S3DirectField(null=True)),
                ('thumbnail', models.FileField(max_length=150, null=True, upload_to=b'documents', blank=True)),
                ('technology_relation_type', models.CharField(default=b'I', max_length=15, verbose_name='Type', choices=[(b'A', 'All'), (b'T', 'By type'), (b'I', 'By item')])),
                ('solution_relation_type', models.CharField(default=b'I', max_length=15, verbose_name='Type', choices=[(b'A', 'All'), (b'T', 'By type'), (b'I', 'By item')])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('name_en', models.CharField(max_length=200, null=True, blank=True)),
                ('name_de', models.CharField(max_length=200, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=50)),
                ('responsibility', models.CharField(max_length=50, null=True, blank=True)),
                ('responsibility_en', models.CharField(max_length=50, null=True, blank=True)),
                ('responsibility_de', models.CharField(max_length=50, null=True, blank=True)),
                ('quotation', models.CharField(max_length=255, null=True, blank=True)),
                ('quotation_en', models.CharField(max_length=255, null=True, blank=True)),
                ('quotation_de', models.CharField(max_length=255, null=True, blank=True)),
                ('text', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='description', blank=True)),
                ('text_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('text_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('image', s3direct.fields.S3DirectField(null=True)),
            ],
            options={
                'verbose_name': 'employee',
                'verbose_name_plural': 'employees',
            },
        ),
        migrations.CreateModel(
            name='ExtinguishingAgent',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fair',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'fair',
                'verbose_name_plural': 'fairs',
            },
        ),
        migrations.CreateModel(
            name='NewsArticle',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('title', models.CharField(max_length=100, null=True, blank=True)),
                ('title_en', models.CharField(max_length=100, null=True, blank=True)),
                ('title_de', models.CharField(max_length=100, null=True, blank=True)),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('teaser', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('teaser_en', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('teaser_de', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('description', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='description', blank=True)),
                ('description_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('description_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('key_image', s3direct.fields.S3DirectField(null=True)),
            ],
            options={
                'ordering': ['-publication_date'],
                'verbose_name': 'news article',
                'verbose_name_plural': 'news articles',
            },
        ),
        migrations.CreateModel(
            name='NewsArticleImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('image', s3direct.fields.S3DirectField()),
                ('position', models.PositiveSmallIntegerField()),
                ('article', models.ForeignKey(to='minimax.NewsArticle')),
            ],
            options={
                'ordering': ['position'],
                'verbose_name': 'image',
                'verbose_name_plural': 'images',
            },
        ),
        migrations.CreateModel(
            name='PageContent',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('type', models.CharField(default=b'TEXT', max_length=15, verbose_name='type', choices=[(b'TEXT', 'Text'), (b'TEXT_W_IMAGE', 'Text with image'), (b'TEXT_W_BGIMAGE', 'Text with background image')])),
                ('text', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='text', blank=True)),
                ('text_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='text', blank=True)),
                ('text_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='text', blank=True)),
                ('image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('image_position', models.CharField(default=b'LEFT', choices=[(b'LEFT', 'Left'), (b'RIGHT', 'Right')], max_length=15, blank=True, null=True, verbose_name='position')),
                ('image_width', models.PositiveSmallIntegerField(default=33, null=True, verbose_name='width', blank=True, choices=[(25, b'25%'), (33, b'33%'), (50, b'50%')])),
                ('image_caption', models.CharField(max_length=255, null=True, blank=True)),
                ('image_caption_en', models.CharField(max_length=255, null=True, blank=True)),
                ('image_caption_de', models.CharField(max_length=255, null=True, blank=True)),
                ('position', models.PositiveSmallIntegerField(null=True, verbose_name=b'Position', blank=True)),
            ],
            options={
                'ordering': ['position'],
                'verbose_name': 'content element',
                'verbose_name_plural': 'content section',
            },
        ),
        migrations.CreateModel(
            name='PageTreeItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=100)),
                ('position', models.PositiveIntegerField()),
                ('type', models.CharField(default=b'STANDARD', max_length=15, verbose_name='type', choices=[(b'STANDARD', 'Standard'), (b'MENU_ITEM', 'Menu item'), (b'HOME', 'Home'), (b'NEWS', 'News'), (b'FAIRS', 'Fairs'), (b'TRAININGS', 'Trainings'), (b'PEOPLE', 'People'), (b'TECHNOLOGIES', 'Technologies'), (b'SOLUTIONS', 'Solutions'), (b'SERVICES', 'Services'), (b'DOWNLOADS', 'Downloads'), (b'CONTACT', 'Contact')])),
                ('title', models.CharField(max_length=255, null=True, blank=True)),
                ('title_en', models.CharField(max_length=255, null=True, blank=True)),
                ('title_de', models.CharField(max_length=255, null=True, blank=True)),
                ('teaser', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('teaser_en', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('teaser_de', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
                ('lft', models.PositiveIntegerField(editable=False, db_index=True)),
                ('rght', models.PositiveIntegerField(editable=False, db_index=True)),
                ('tree_id', models.PositiveIntegerField(editable=False, db_index=True)),
                ('level', models.PositiveIntegerField(editable=False, db_index=True)),
                ('parent', mptt.fields.TreeForeignKey(related_name='children', blank=True, to='minimax.PageTreeItem', null=True)),
            ],
            options={
                'verbose_name': 'Navigation entry',
                'verbose_name_plural': 'Navigation entries',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('characteristics', models.CharField(max_length=255, null=True, blank=True)),
                ('characteristics_en', models.CharField(max_length=255, null=True, blank=True)),
                ('characteristics_de', models.CharField(max_length=255, null=True, blank=True)),
                ('agent', models.ForeignKey(blank=True, to='minimax.ExtinguishingAgent', null=True)),
                ('referenced_applications', models.ManyToManyField(related_name='projects', to='minimax.Application', blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('code', models.CharField(unique=True, max_length=2)),
                ('name', models.CharField(max_length=100)),
                ('name_en', models.CharField(max_length=100, null=True)),
                ('name_de', models.CharField(max_length=100, null=True)),
                ('default_language', models.CharField(default=(b'en', b'English'), max_length=15, choices=[(b'en', b'English'), (b'de', b'German')])),
                ('active', models.PositiveIntegerField(default=0, choices=[(1, 'Yes'), (0, 'No')])),
                ('active_en', models.PositiveIntegerField(default=0, null=True, choices=[(1, 'Yes'), (0, 'No')])),
                ('active_de', models.PositiveIntegerField(default=0, null=True, choices=[(1, 'Yes'), (0, 'No')])),
            ],
            options={
                'verbose_name': 'region',
                'verbose_name_plural': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
                ('header_text_1', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_1_en', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_1_de', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_2', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_text_2_en', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_text_2_de', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('description_title', models.CharField(max_length=100, null=True, blank=True)),
                ('description_title_en', models.CharField(max_length=100, null=True, blank=True)),
                ('description_title_de', models.CharField(max_length=100, null=True, blank=True)),
                ('description_left', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='description left column', blank=True)),
                ('description_left_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description left column', blank=True)),
                ('description_left_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description left column', blank=True)),
                ('description_left_image', s3direct.fields.S3DirectField(null=True, verbose_name='image left column', blank=True)),
                ('description_left_image_title', models.CharField(default=b'', max_length=100, null=True, verbose_name='image title', blank=True)),
                ('description_left_image_title_en', models.CharField(default=b'', max_length=100, null=True, verbose_name='image title', blank=True)),
                ('description_left_image_title_de', models.CharField(default=b'', max_length=100, null=True, verbose_name='image title', blank=True)),
                ('description_right', minimax.utils.model_utils.RichTextField(default=b'', help_text='if left blank, the description will be rendered on one column', verbose_name='description right column', blank=True)),
                ('description_right_en', minimax.utils.model_utils.RichTextField(default=b'', help_text='if left blank, the description will be rendered on one column', null=True, verbose_name='description right column', blank=True)),
                ('description_right_de', minimax.utils.model_utils.RichTextField(default=b'', help_text='if left blank, the description will be rendered on one column', null=True, verbose_name='description right column', blank=True)),
                ('description_right_image', s3direct.fields.S3DirectField(null=True, verbose_name='image right column', blank=True)),
                ('description_right_image_title', models.CharField(default=b'', max_length=100, null=True, verbose_name='image title', blank=True)),
                ('description_right_image_title_en', models.CharField(default=b'', max_length=100, null=True, verbose_name='image title', blank=True)),
                ('description_right_image_title_de', models.CharField(default=b'', max_length=100, null=True, verbose_name='image title', blank=True)),
                ('details_text', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='scope in details', blank=True)),
                ('details_text_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='scope in details', blank=True)),
                ('details_text_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='scope in details', blank=True)),
                ('details_image', s3direct.fields.S3DirectField(null=True, verbose_name='details image', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'service',
                'verbose_name_plural': 'services',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
            ],
            options={
                'verbose_name': 'service type',
                'verbose_name_plural': 'service types',
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
                ('header_text_1', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_1_en', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_1_de', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_2', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_text_2_en', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_text_2_de', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('primary_description', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='description', blank=True)),
                ('primary_description_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('primary_description_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('primary_description_image', s3direct.fields.S3DirectField(null=True, verbose_name='image', blank=True)),
                ('technologies_teaser', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='technologies', blank=True)),
                ('technologies_teaser_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='technologies', blank=True)),
                ('technologies_teaser_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='technologies', blank=True)),
                ('technologies_image', s3direct.fields.S3DirectField(null=True, verbose_name='image', blank=True)),
                ('interactive_map_image', s3direct.fields.S3DirectField(null=True, blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'solution',
                'verbose_name_plural': 'solutions',
            },
            bases=(models.Model, minimax.models.RelatedDocuments),
        ),
        migrations.CreateModel(
            name='SolutionMapPoint',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('position_x', models.DecimalField(max_digits=6, decimal_places=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('position_y', models.DecimalField(max_digits=6, decimal_places=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('application_description', minimax.utils.model_utils.RichTextField(default=b'', blank=True)),
                ('application_description_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, blank=True)),
                ('application_description_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, blank=True)),
                ('application', models.ForeignKey(related_name='solution_map_points', to='minimax.Application')),
                ('solution', models.ForeignKey(related_name='map_points', to='minimax.Solution')),
            ],
            options={
                'verbose_name': 'map point',
                'verbose_name_plural': 'map points',
            },
        ),
        migrations.CreateModel(
            name='SolutionType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
            ],
            options={
                'verbose_name': 'solution type',
                'verbose_name_plural': 'solution types',
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
                ('header_text_1', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_1_en', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_1_de', models.TextField(null=True, verbose_name='teaser', blank=True)),
                ('header_text_2', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_text_2_en', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_text_2_de', models.TextField(null=True, verbose_name='text', blank=True)),
                ('header_image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('primary_description', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='description', blank=True)),
                ('primary_description_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('primary_description_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='description', blank=True)),
                ('primary_description_image', s3direct.fields.S3DirectField(null=True, verbose_name='image', blank=True)),
                ('interactive_map_image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('applications_teaser', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='applications', blank=True)),
                ('applications_teaser_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='applications', blank=True)),
                ('applications_teaser_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='applications', blank=True)),
                ('certifications_teaser', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='certifications', blank=True)),
                ('certifications_teaser_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='certifications', blank=True)),
                ('certifications_teaser_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='certifications', blank=True)),
                ('technologies_teaser', minimax.utils.model_utils.RichTextField(default=b'', verbose_name='technologies', blank=True)),
                ('technologies_teaser_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='technologies', blank=True)),
                ('technologies_teaser_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, verbose_name='technologies', blank=True)),
                ('referenced_applications', models.ManyToManyField(to='minimax.Application', blank=True)),
                ('referenced_certification_types', models.ManyToManyField(to='minimax.CertificationType', blank=True)),
                ('referenced_technologies', models.ManyToManyField(to='minimax.Technology', blank=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'technology',
                'verbose_name_plural': 'technologies',
            },
            bases=(models.Model, minimax.models.RelatedDocuments),
        ),
        migrations.CreateModel(
            name='TechnologyFunctionTab',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200, null=True, blank=True)),
                ('title_en', models.CharField(max_length=200, null=True, blank=True)),
                ('title_de', models.CharField(max_length=200, null=True, blank=True)),
                ('teaser', models.TextField(default=b'', blank=True)),
                ('teaser_en', models.TextField(default=b'', null=True, blank=True)),
                ('teaser_de', models.TextField(default=b'', null=True, blank=True)),
                ('description', minimax.utils.model_utils.RichTextField(default=b'', blank=True)),
                ('description_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, blank=True)),
                ('description_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, blank=True)),
                ('position', models.PositiveSmallIntegerField(null=True, blank=True)),
                ('technology', models.ForeignKey(related_name='function_tabs', to='minimax.Technology')),
            ],
            options={
                'ordering': ['position'],
                'verbose_name': 'function tab',
                'verbose_name_plural': 'function tabs',
            },
        ),
        migrations.CreateModel(
            name='TechnologyMapPoint',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=200, null=True, blank=True)),
                ('title_en', models.CharField(max_length=200, null=True, blank=True)),
                ('title_de', models.CharField(max_length=200, null=True, blank=True)),
                ('image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('image_en', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('image_de', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('position_x', models.DecimalField(max_digits=6, decimal_places=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('position_y', models.DecimalField(max_digits=6, decimal_places=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('description', minimax.utils.model_utils.RichTextField(default=b'', blank=True)),
                ('description_en', minimax.utils.model_utils.RichTextField(default=b'', null=True, blank=True)),
                ('description_de', minimax.utils.model_utils.RichTextField(default=b'', null=True, blank=True)),
                ('technology', models.ForeignKey(related_name='map_points', to='minimax.Technology')),
            ],
            options={
                'verbose_name': 'map point',
                'verbose_name_plural': 'map points',
            },
        ),
        migrations.CreateModel(
            name='TechnologyType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(max_length=100, null=True, blank=True)),
                ('slug', models.SlugField(max_length=100, unique=True, null=True)),
            ],
            options={
                'verbose_name': 'technology type',
                'verbose_name_plural': 'technology types',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=100)),
                ('path', models.CharField(help_text=b'Full path without leading slash.', max_length=255)),
            ],
            options={
                'verbose_name': 'template',
                'verbose_name_plural': 'templates',
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('title', models.CharField(max_length=100, null=True, blank=True)),
                ('title_en', models.CharField(max_length=100, null=True, blank=True)),
                ('title_de', models.CharField(max_length=100, null=True, blank=True)),
            ],
            options={
                'verbose_name': 'training',
                'verbose_name_plural': 'trainings',
            },
        ),
        migrations.CreateModel(
            name='WebPage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('status', models.CharField(default=b'HIDDEN', max_length=15, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_en', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('status_de', models.CharField(default=b'HIDDEN', max_length=15, null=True, verbose_name='status', choices=[(b'HIDDEN', 'Hidden'), (b'PUBLISHED', 'Published')])),
                ('name', models.CharField(help_text='The name of the page used in the navigation.', max_length=100, null=True, blank=True)),
                ('name_en', models.CharField(help_text='The name of the page used in the navigation.', max_length=100, null=True, blank=True)),
                ('name_de', models.CharField(help_text='The name of the page used in the navigation.', max_length=100, null=True, blank=True)),
                ('header_title', models.CharField(max_length=255, null=True, verbose_name='title', blank=True)),
                ('header_title_en', models.CharField(max_length=255, null=True, verbose_name='title', blank=True)),
                ('header_title_de', models.CharField(max_length=255, null=True, verbose_name='title', blank=True)),
                ('header_caption', models.TextField(default=b'', verbose_name='caption', blank=True)),
                ('header_caption_en', models.TextField(default=b'', null=True, verbose_name='caption', blank=True)),
                ('header_caption_de', models.TextField(default=b'', null=True, verbose_name='caption', blank=True)),
                ('header_image', s3direct.fields.S3DirectField(null=True, blank=True)),
                ('template', models.ForeignKey(related_name='pages', blank=True, to='minimax.Template', null=True)),
            ],
            options={
                'verbose_name': 'web page',
                'verbose_name_plural': 'web pages',
            },
        ),
        migrations.CreateModel(
            name='WebPageRelation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('page_tree_item', models.ForeignKey(related_name='pages', to='minimax.PageTreeItem')),
                ('region', models.ForeignKey(to='minimax.Region')),
                ('web_page', models.ForeignKey(related_name='related_page_tree_items', to='minimax.WebPage')),
            ],
            options={
                'ordering': ['region__id'],
                'verbose_name': 'related web page',
                'verbose_name_plural': 'related web pages',
            },
        ),
        migrations.AddField(
            model_name='technology',
            name='type',
            field=models.ForeignKey(related_name='technologies', to='minimax.TechnologyType'),
        ),
        migrations.AddField(
            model_name='solution',
            name='referenced_technologies',
            field=models.ManyToManyField(to='minimax.Technology', blank=True),
        ),
        migrations.AddField(
            model_name='solution',
            name='type',
            field=models.ForeignKey(related_name='solutions', to='minimax.SolutionType'),
        ),
        migrations.AddField(
            model_name='service',
            name='type',
            field=models.ForeignKey(related_name='services', to='minimax.ServiceType'),
        ),
        migrations.AddField(
            model_name='project',
            name='referenced_solutions',
            field=models.ManyToManyField(related_name='projects', to='minimax.Solution', blank=True),
        ),
        migrations.AddField(
            model_name='project',
            name='referenced_technologies',
            field=models.ManyToManyField(related_name='projects', to='minimax.Technology', blank=True),
        ),
        migrations.AddField(
            model_name='pagecontent',
            name='page',
            field=models.ForeignKey(related_name='content', to='minimax.WebPage'),
        ),
        migrations.AddField(
            model_name='document',
            name='related_solution_types',
            field=models.ManyToManyField(related_name='documents', to='minimax.SolutionType', blank=True),
        ),
        migrations.AddField(
            model_name='document',
            name='related_solutions',
            field=models.ManyToManyField(related_name='documents', to='minimax.Solution', blank=True),
        ),
        migrations.AddField(
            model_name='document',
            name='related_technologies',
            field=models.ManyToManyField(related_name='documents', to='minimax.Technology', blank=True),
        ),
        migrations.AddField(
            model_name='document',
            name='related_technology_types',
            field=models.ManyToManyField(related_name='documents', to='minimax.TechnologyType', blank=True),
        ),
        migrations.AddField(
            model_name='document',
            name='type',
            field=models.ForeignKey(to='minimax.DocumentType'),
        ),
        migrations.AddField(
            model_name='customer',
            name='related_services',
            field=models.ManyToManyField(related_name='customers', to='minimax.Service', blank=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='related_solutions',
            field=models.ManyToManyField(related_name='customers', to='minimax.Solution', blank=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='related_technologies',
            field=models.ManyToManyField(related_name='customers', to='minimax.Technology', blank=True),
        ),
        migrations.AlterUniqueTogether(
            name='webpagerelation',
            unique_together=set([('region', 'page_tree_item')]),
        ),
    ]
